from scapy.all import *
from scapy.contrib.bgp import *

def send_bgp_open(dst_ip, dst_port=179):
    # Basic TCP/IP session
    ip = IP(dst=dst_ip)
    syn = TCP(sport=RandShort(), dport=dst_port, flags='S', seq=1000)
    syn_ack = sr1(ip/syn, timeout=2)

    if syn_ack is None or syn_ack.haslayer(TCP) == False or syn_ack[TCP].flags != 'SA':
        print("[!] No SYN-ACK received, port might be filtered or closed.")
        return

    ack = TCP(sport=syn.sport, dport=dst_port, flags='A', seq=syn_ack.ack, ack=syn_ack.seq + 1)
    send(ip/ack)

    # Construct BGP OPEN packet
    bgp_open = BGPHeader(type=1)/BGPOpen(
        version=4,
        my_as=65000,
        hold_time=90,
        bgp_id="1.1.1.1",
        opt_param_len=0
    )
    pkt = ip/TCP(sport=syn.sport, dport=dst_port, flags='PA', seq=ack.seq, ack=ack.ack)/bgp_open
    send(pkt)
    print("[+] BGP OPEN packet sent to", dst_ip)

if __name__ == "__main__":
    import sys
    if len(sys.argv) < 2:
        print("Usage: python3 bgp_open.py <target_ip>")
        sys.exit(1)
    send_bgp_open(sys.argv[1])
